# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          java-version: '8.0.422+5'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

#      - uses: mr-smithers-excellent/docker-build-push@v6
#        name: Build & push Docker image
#        with:
#          image: kanagdocker001/assesment
#          tags: latest
#          dockerfile: Dockerfile.ci
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 2: Log in to Docker Hub (optional, if pushing to Docker Hub)
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 3: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t kanagdocker001/assessment:${{ github.sha }} .
          docker tag kanagdocker001/assessment:${{ github.sha }} kanagdocker001/assessment:latest

      # Step 4: Push the Docker image to Docker Hub (optional)
      - name: Push Docker image
        run: |
          docker push kanagdocker001/assessment:${{ github.sha }}
          docker push kanagdocker001/assessment:latest